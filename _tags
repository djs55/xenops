# OASIS_START
# DO NOT EDIT (digest: aa014d77c1d59f83cf181e8883c5b487)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library xenops
"src/xenops.cmxs": use_xenops
"src/debug.cmx": for-pack(Xenops)
"src/io.cmx": for-pack(Xenops)
"src/memory.cmx": for-pack(Xenops)
"src/netman.cmx": for-pack(Xenops)
"src/statdev.cmx": for-pack(Xenops)
"src/xenops_helpers.cmx": for-pack(Xenops)
"src/xenstore.cmx": for-pack(Xenops)
"src/xenstore_watch.cmx": for-pack(Xenops)
"src/domain.cmx": for-pack(Xenops)
"src/device.cmx": for-pack(Xenops)
"src/device_common.cmx": for-pack(Xenops)
"src/xenops_task.cmx": for-pack(Xenops)
"src/xenops_utils.cmx": for-pack(Xenops)
"src/device_number.cmx": for-pack(Xenops)
"src/cancel_utils.cmx": for-pack(Xenops)
"src/watch.cmx": for-pack(Xenops)
"src/stats.cmx": for-pack(Xenops)
"src/xenopsd.cmx": for-pack(Xenops)
"src/xenbus_utils.cmx": for-pack(Xenops)
"src/xc_path.cmx": for-pack(Xenops)
"src/path.cmx": for-pack(Xenops)
"src/forkhelpers.cmx": for-pack(Xenops)
"src/xenctrl_uuid.cmx": for-pack(Xenops)
"src/scheduler.cmx": for-pack(Xenops)
"src/xenctrlext.cmx": for-pack(Xenops)
"src/mac.cmx": for-pack(Xenops)
"src/hotplug.cmx": for-pack(Xenops)
<src/*.ml{,i}>: oasis_library_xenops_ccopt
"src/statdev_stubs.c": oasis_library_xenops_ccopt
"src/xc_dom_stubs.c": oasis_library_xenops_ccopt
<src/xenops.{cma,cmxa}>: oasis_library_xenops_byte
<src/*.ml{,i}>: oasis_library_xenops_byte
"src/statdev_stubs.c": oasis_library_xenops_byte
"src/xc_dom_stubs.c": oasis_library_xenops_byte
<src/xenops.{cma,cmxa}>: oasis_library_xenops_native
<src/*.ml{,i}>: oasis_library_xenops_native
"src/statdev_stubs.c": oasis_library_xenops_native
"src/xc_dom_stubs.c": oasis_library_xenops_native
<src/xenops.{cma,cmxa}>: use_libxenops_stubs
<src/*.ml{,i}>: pkg_xenctrl
<src/*.ml{,i}>: pkg_xenstore
<src/*.ml{,i}>: pkg_xenstore.unix
<src/*.ml{,i}>: pkg_xenstore_transport
<src/*.ml{,i}>: pkg_xenstore_transport.unix
<src/*.ml{,i}>: pkg_uuidm
<src/*.ml{,i}>: pkg_threads
<src/*.ml{,i}>: pkg_rpclib
<src/*.ml{,i}>: pkg_rpclib.syntax
<src/*.ml{,i}>: pkg_stringext
<src/*.ml{,i}>: pkg_oclock
"src/statdev_stubs.c": pkg_xenctrl
"src/statdev_stubs.c": pkg_xenstore
"src/statdev_stubs.c": pkg_xenstore.unix
"src/statdev_stubs.c": pkg_xenstore_transport
"src/statdev_stubs.c": pkg_xenstore_transport.unix
"src/statdev_stubs.c": pkg_uuidm
"src/statdev_stubs.c": pkg_threads
"src/statdev_stubs.c": pkg_rpclib
"src/statdev_stubs.c": pkg_rpclib.syntax
"src/statdev_stubs.c": pkg_stringext
"src/statdev_stubs.c": pkg_oclock
"src/xc_dom_stubs.c": pkg_xenctrl
"src/xc_dom_stubs.c": pkg_xenstore
"src/xc_dom_stubs.c": pkg_xenstore.unix
"src/xc_dom_stubs.c": pkg_xenstore_transport
"src/xc_dom_stubs.c": pkg_xenstore_transport.unix
"src/xc_dom_stubs.c": pkg_uuidm
"src/xc_dom_stubs.c": pkg_threads
"src/xc_dom_stubs.c": pkg_rpclib
"src/xc_dom_stubs.c": pkg_rpclib.syntax
"src/xc_dom_stubs.c": pkg_stringext
"src/xc_dom_stubs.c": pkg_oclock
# Executable list_domains
<list_domains/list_domains.{native,byte}>: oasis_executable_list_domains_byte
<list_domains/*.ml{,i}>: oasis_executable_list_domains_byte
<list_domains/list_domains.{native,byte}>: oasis_executable_list_domains_native
<list_domains/*.ml{,i}>: oasis_executable_list_domains_native
<list_domains/list_domains.{native,byte}>: use_xenops
<list_domains/list_domains.{native,byte}>: pkg_xenctrl
<list_domains/list_domains.{native,byte}>: pkg_xenstore
<list_domains/list_domains.{native,byte}>: pkg_xenstore.unix
<list_domains/list_domains.{native,byte}>: pkg_xenstore_transport
<list_domains/list_domains.{native,byte}>: pkg_xenstore_transport.unix
<list_domains/list_domains.{native,byte}>: pkg_uuidm
<list_domains/list_domains.{native,byte}>: pkg_threads
<list_domains/list_domains.{native,byte}>: pkg_rpclib
<list_domains/list_domains.{native,byte}>: pkg_rpclib.syntax
<list_domains/list_domains.{native,byte}>: pkg_stringext
<list_domains/list_domains.{native,byte}>: pkg_oclock
<list_domains/*.ml{,i}>: use_xenops
<list_domains/*.ml{,i}>: pkg_xenctrl
<list_domains/*.ml{,i}>: pkg_xenstore
<list_domains/*.ml{,i}>: pkg_xenstore.unix
<list_domains/*.ml{,i}>: pkg_xenstore_transport
<list_domains/*.ml{,i}>: pkg_xenstore_transport.unix
<list_domains/*.ml{,i}>: pkg_uuidm
<list_domains/*.ml{,i}>: pkg_threads
<list_domains/*.ml{,i}>: pkg_rpclib
<list_domains/*.ml{,i}>: pkg_rpclib.syntax
<list_domains/*.ml{,i}>: pkg_stringext
<list_domains/*.ml{,i}>: pkg_oclock
# OASIS_STOP
<src/device_common.ml{,.i}>: syntax_camlp4o, pkg_rpclib
<src/domain.ml>: syntax_camlp4o, pkg_rpclib
<src/device.ml>: syntax_camlp4o, pkg_rpclib
<src/device_number.ml{,.i}>: syntax_camlp4o, pkg_rpclib
<src/scheduler.ml>: syntax_camlp4o, pkg_rpclib
